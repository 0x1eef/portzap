#!/bin/sh

##
# A shell script that takes care of keeping up to date with
# the HardenedBSD ports collection.

source="https://git.hardenedbsd.org/hardenedbsd/ports.git"
stage_dir="/home/_portzap/ports"
clone_mode=007
pull_mode=007

clone_mode=007
pull_mode=007
init_mode=707

##
# Utils

exit_on_missing_deps() {
    deps="git"
    for dep in $deps; do
        which -s $dep
        if [ $? -ne 0 ]; then
            echo $dep is missing
            exit 1
        fi
    done
}

has_portzap_access() {
    groups=$(id -Gn)
    in_group=1
    for g in $groups; do
        if [ $g="_portzap" ];
        then
            in_group=0
        fi
    done
    return $in_group
}

user_is_not_root() {
    user_id=$(id -u $(whoami))
    return $(test $user_id -ne "0")
}

##
# Commands

help() {
    echo "Usage: portzap init|clone|pull|unpack"
}

init() {
    if user_is_not_root;
    then
        echo "The init command should be run as root."
        exit 1
    fi;
    umask $init_mode
    pw userdel _portzap -r
    pw useradd _portzap -m -s /sbin/nologin
}

clone() {
    if has_portzap_access
    then
        if [ -e "$stage_dir/.git" ];
        then
            echo "$stage_dir has already been cloned."
            echo "Run 'portzap pull' instead."
            exit 1
        fi
        umask $clone_mode
        git clone --depth 1 $source $stage_dir
    else
        echo "Permission denied"
    fi
}

pull() {
    if has_portzap_access
    then
        if [ -e "$stage_dir/.git" ];
        then
            umask $pull_mode
            cd $stage_dir
            git pull --rebase origin hardenedbsd/main
        else
            echo "Run 'portzap clone' first."
            exit 1
        fi
    else
        echo "Permission denied."
        exit 1
    fi
}

unpack() {
    if user_is_not_root
    then
        echo "The unpack command should be run as root."
        exit 1
    fi
    cp -Rfv /tmp/ports /usr/
}

case $1 in
    "init")
        init
        break
        ;;
    "clone")
        exit_on_missing_deps
        clone
        break
        ;;
    "pull")
        exit_on_missing_deps
        pull
        break
        ;;
    "unpack")
        unpack
        break
        ;;
    *)
        help
        break
        ;;
    esac
