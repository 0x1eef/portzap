#!/bin/sh -e

##
# variables
libexec=$(dirname "$0")
localbase=${LOCALBASE:-/usr/local}
git="${localbase}"/bin/git
gitdir=$1
branch=$2

##
# functions
set_repository_permissions()
{
    gitdir=$1
    doas -u root /bin/chmod -R u=rwX,g=rwX,o= "${gitdir}/.git"
    doas -u root /usr/sbin/chown -R _portzap:_portzap "${gitdir}/.git"
}

change_branch()
{
    set +e
    remote=$1
    branch=$2
    echo "[-] Attempt to change branch: ${branch}"
    doas -u _portzap "${git}" fetch "${remote}" > /dev/null 2>&1
    doas -u _portzap "${git}" checkout "${branch}" > /dev/null 2>&1 ||
    doas -u _portzap "${git}" checkout -t "${remote}"/"${branch}" > /dev/null 2>&1
    doas -u _portzap "${git}" reset HEAD --hard > /dev/null 2>&1
    echo "[-] Done"
    set -e
}

##
# main
if ! "${libexec}"/isportzap-member; then
    echo "[-] This command must be run by a member of the _portzap group"
    exit 1
fi

if [ -e "${gitdir}/.git" ]; then
    umask u=rwX,g=rwX,o=
    set_repository_permissions "${gitdir}"
    cd "${gitdir}"
    remote=$("${git}" remote | head -n1)
    if [ "$(git branch --show-current)" != "${branch}" ]; then
        change_branch "${remote}" "${branch}"
    fi
    set -x
    doas -u _portzap "${git}" pull --rebase "${remote}" "${branch}"
else
    set +x
    echo "[-] ${gitdir} is not a valid git repository."
    echo "[-] Try 'portzap clone'"
    exit 1
fi
